# ###################
# main
# ##################################################################
#
server {
    listen       80;
    server_name publicdomainmap.org;

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
  listen       443  ssl;
  server_name publicdomainmap.org;
  return 301 https://www.publicdomainmap.org$request_uri;

  ssl_certificate /etc/letsencrypt/live/publicdomainmap.org/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/publicdomainmap.org/privkey.pem;
  include /etc/letsencrypt/options-ssl-nginx.conf;
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

}

server {
    listen       80;
    server_name www.publicdomainmap.org;

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
  listen       443  ssl;
  server_name www.publicdomainmap.org;
  include       /etc/nginx/mime.types;

  ssl_certificate /etc/letsencrypt/live/www.publicdomainmap.org/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/www.publicdomainmap.org/privkey.pem;
  include /etc/letsencrypt/options-ssl-nginx.conf;
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

  fastcgi_param REMOTE_ADDR       $remote_addr;
  fastcgi_param QUERY_STRING      $query_string;
  fastcgi_param REQUEST_METHOD    $request_method;
  fastcgi_param CONTENT_TYPE      $content_type;
  fastcgi_param CONTENT_LENGTH    $content_length;
  fastcgi_param REQUEST_URI       $request_uri;
  # Turn this off, since we use our own Auth
  fastcgi_pass_request_headers    off;
  fastcgi_read_timeout 4800;

  # "Website"
  location / {
    index index.html;
    root /app/vendor/assets/website;
  }

  # pd id
  #location /dist {
  #  index index.html;
  #  alias /app/vendor/assets/iD/iD;
  #}

  # presentations dir
  location /slides {
    index index.html;
    alias /var/www/static/slides;
  }


  #location /id {
  #  rewrite ^.*$ /dist/id.html;
  #}

  #location /land.html {
  #  rewrite ^.*$ /dist/land.html;
  #}

  # CGI Map Gets
  location ~ ^/api/0\.6/map(\.json)?(\?(.*))?$ {
      if ($request_method = OPTIONS) {
        add_header "Access-Control-Allow-Origin" "https://tm.publicdomainmap.org";
        add_header "Access-Control-Allow-Methods" "GET, POST, PUT, OPTIONS, HEAD, DELETE";
        add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
        return 200;
      }

    add_header "Access-Control-Allow-Origin" "*";
    fastcgi_pass   cgimap:8000;
  }
  location ~ ^/api/0\.6/(node|way|relation)/[[:digit:]]+$ {
      if ($request_method = OPTIONS) {
        add_header "Access-Control-Allow-Origin" "https://tm.publicdomainmap.org";
        add_header "Access-Control-Allow-Methods" "GET, POST, PUT, OPTIONS, HEAD, DELETE";
        add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
        return 200;
      }

    add_header "Access-Control-Allow-Origin" "*";
    fastcgi_pass   cgimap:8000;
  }
  location ~ ^/api/0\.6/(node|way|relation)/[[:digit:]]+/history.*$ {
      if ($request_method = OPTIONS) {
        add_header "Access-Control-Allow-Origin" "https://tm.publicdomainmap.org";
        add_header "Access-Control-Allow-Methods" "GET, POST, PUT, OPTIONS, HEAD, DELETE";
        add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
        return 200;
      }

    add_header "Access-Control-Allow-Origin" "*";
    fastcgi_pass   cgimap:8000;
  }
  location ~ ^/api/0\.6/(node|way|relation)/[[:digit:]]+/[[:digit:]]+.*$ {
      if ($request_method = OPTIONS) {
        add_header "Access-Control-Allow-Origin" "https://tm.publicdomainmap.org";
        add_header "Access-Control-Allow-Methods" "GET, POST, PUT, OPTIONS, HEAD, DELETE";
        add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
        return 200;
      }

    add_header "Access-Control-Allow-Origin" "*";
    fastcgi_pass   cgimap:8000;
  }
  location ~ ^/api/0\.6/(node|way|relation)/[[:digit:]]+/relations$ {
      if ($request_method = OPTIONS) {
        add_header "Access-Control-Allow-Origin" "https://tm.publicdomainmap.org";
        add_header "Access-Control-Allow-Methods" "GET, POST, PUT, OPTIONS, HEAD, DELETE";
        add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
        return 200;
      }

    add_header "Access-Control-Allow-Origin" "*";
    fastcgi_pass   cgimap:8000;
  }
  location ~ ^/api/0\.6/node/[[:digit:]]+/ways$ {
      if ($request_method = OPTIONS) {
        add_header "Access-Control-Allow-Origin" "https://tm.publicdomainmap.org";
        add_header "Access-Control-Allow-Methods" "GET, POST, PUT, OPTIONS, HEAD, DELETE";
        add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
        return 200;
      }

    add_header "Access-Control-Allow-Origin" "*";
    fastcgi_pass   cgimap:8000;
  }
  location ~ ^/api/0\.6/(way|relation)/[[:digit:]]+/full$ {
      if ($request_method = OPTIONS) {
        add_header "Access-Control-Allow-Origin" "https://tm.publicdomainmap.org";
        add_header "Access-Control-Allow-Methods" "GET, POST, PUT, OPTIONS, HEAD, DELETE";
        add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
        return 200;
      }

    add_header "Access-Control-Allow-Origin" "*";
    fastcgi_pass   cgimap:8000;
  }
  location ~ ^/api/0\.6/changeset/[[:digit:]]+(\.json|\.xml|)$ {
      if ($request_method = OPTIONS) {
        add_header "Access-Control-Allow-Origin" "https://tm.publicdomainmap.org";
        add_header "Access-Control-Allow-Methods" "GET, POST, PUT, OPTIONS, HEAD, DELETE";
        add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
        return 200;
      }

    add_header "Access-Control-Allow-Origin" "*";
    fastcgi_pass   cgimap:8000;
  }
  location ~ ^/api/0\.6/(nodes|ways|relations)(\?(.*))?$ {
      if ($request_method = OPTIONS) {
        add_header "Access-Control-Allow-Origin" "https://tm.publicdomainmap.org";
        add_header "Access-Control-Allow-Methods" "GET, POST, PUT, OPTIONS, HEAD, DELETE";
        add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
        return 200;
      }

    add_header "Access-Control-Allow-Origin" "*";
    fastcgi_pass   cgimap:8000;
  }
  location ~ ^/api/0\.6/changeset/[[:digit:]]+/download$ {
      if ($request_method = OPTIONS) {
        add_header "Access-Control-Allow-Origin" "https://tm.publicdomainmap.org";
        add_header "Access-Control-Allow-Methods" "GET, POST, PUT, OPTIONS, HEAD, DELETE";
        add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
        return 200;
      }

    add_header "Access-Control-Allow-Origin" "*";
    fastcgi_pass   cgimap:8000;
  }
  # ###############
  
 
  location ~ ^/(api|oauth)/ {
    proxy_set_header  X-Forwarded-Proto $scheme;
    proxy_set_header  X-Forwarded-Ssl off;
    proxy_set_header  X-Forwarded-Port $server_port;
    proxy_set_header  X-Forwarded-Host $http_host;
    proxy_redirect off;

      # Preflighted requestis
      if ($request_method = OPTIONS) {
        add_header "Access-Control-Allow-Origin" "https://tm.publicdomainmap.org";
        add_header "Access-Control-Allow-Methods" "GET, POST, PUT, OPTIONS, HEAD, DELETE";
        add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
        return 200;
      }

      # CORS WHITELIST EVERYTHING
      if ($request_method = (GET|POST|OPTIONS|HEAD|DELETE)) {
        add_header "Access-Control-Allow-Origin" "https://tm.publicdommainmap.org";
        add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
      }

    proxy_pass http://api:8000;
  }

  #location ^~ /tiles {
  #  #proxy_set_header  X-Forwarded-Proto $scheme;
  #  #proxy_set_header  X-Forwarded-Ssl off;
  #  #proxy_set_header  X-Forwarded-Port $server_port;
  #  #proxy_set_header  X-Forwarded-Host $http_host;
  #  #rewrite ^/tiles(.*)$ $1 last;

  #  #proxy_pass http://pg_tileserv:7800/;
  #  rewrite ^/tiles(/.*)$ $1 break;
  #  proxy_pass  http://pg_tileserv:7800/;
  #  proxy_set_header Host $host;
  #  proxy_set_header X-Real-IP $remote_addr;
  #  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  #  proxy_set_header X-Forwarded-Proto $scheme;
  #  proxy_redirect    off;
  #}
  
  # Some data uploads may be very large
  client_max_body_size 100M;

}

server {
    listen       80;
    server_name tm.publicdomainmap.org;

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
  listen       443  ssl;
  server_name tm.publicdomainmap.org;
  include       /etc/nginx/mime.types;

  ssl_certificate /etc/letsencrypt/live/tm.publicdomainmap.org/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/tm.publicdomainmap.org/privkey.pem;
  include /etc/letsencrypt/options-ssl-nginx.conf;
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

  # ################
  # TASKING MANAGER
  # ###############
  #
  location ~ ^/.*/land.html {
    alias /app/vendor/assets/iD/iD/land.html;
  }

  location ~ ^/api/v2 {
    proxy_set_header  X-Forwarded-Proto $scheme;
    proxy_set_header  X-Forwarded-Ssl off;
    proxy_set_header  X-Forwarded-Port $server_port;
    proxy_set_header  X-Forwarded-Host $http_host;
    proxy_redirect off;

    proxy_pass http://tm_backend:5000;
  } 

  location / {
    proxy_set_header  X-Forwarded-Proto $scheme;
    proxy_set_header  X-Forwarded-Ssl off;
    proxy_set_header  X-Forwarded-Port $server_port;
    proxy_set_header  X-Forwarded-Host $http_host;
    proxy_redirect off;

    proxy_pass http://tm_frontend:80/;
  } 

  # Some projects to TM may be very large
  client_max_body_size 100M;
}

server {
  listen   80;
  server_name featureserv.publicdomainmap.org;

  location / {
    return 301 https://$host$request_uri;
  }
}

server {
  listen       443  ssl;
  server_name featureserv.publicdomainmap.org;
  include       /etc/nginx/mime.types;

  ssl_certificate /etc/letsencrypt/live/featureserv.publicdomainmap.org/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/featureserv.publicdomainmap.org/privkey.pem;
  include /etc/letsencrypt/options-ssl-nginx.conf;
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

  location / {
    proxy_pass  http://pg_featureserv:9000/;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_redirect    off;
  }

}

# ##################################################################
